[{"content":"背景说明 操作系统版本，红帽RHEL9版本\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 [root@localhost ~]# cat /etc/os-release NAME=\u0026#34;Red Hat Enterprise Linux\u0026#34; VERSION=\u0026#34;9.5 (Plow)\u0026#34; ID=\u0026#34;rhel\u0026#34; ID_LIKE=\u0026#34;fedora\u0026#34; VERSION_ID=\u0026#34;9.5\u0026#34; PLATFORM_ID=\u0026#34;platform:el9\u0026#34; PRETTY_NAME=\u0026#34;Red Hat Enterprise Linux 9.5 (Plow)\u0026#34; ANSI_COLOR=\u0026#34;0;31\u0026#34; LOGO=\u0026#34;fedora-logo-icon\u0026#34; CPE_NAME=\u0026#34;cpe:/o:redhat:enterprise_linux:9::baseos\u0026#34; HOME_URL=\u0026#34;https://www.redhat.com/\u0026#34; DOCUMENTATION_URL=\u0026#34;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9\u0026#34; BUG_REPORT_URL=\u0026#34;https://issues.redhat.com/\u0026#34; REDHAT_BUGZILLA_PRODUCT=\u0026#34;Red Hat Enterprise Linux 9\u0026#34; REDHAT_BUGZILLA_PRODUCT_VERSION=9.5 REDHAT_SUPPORT_PRODUCT=\u0026#34;Red Hat Enterprise Linux\u0026#34; REDHAT_SUPPORT_PRODUCT_VERSION=\u0026#34;9.5\u0026#34; 1、安装EPEL存储库 首先执行命令sudo yum install epel-release -y 进行安装，-y参数会自动安装，安装过程中无需手动敲y\n可能会出现找不到匹配的软件包\n1 2 3 4 5 [root@localhost ~]# sudo yum install epel-release -y Updating Subscription Management repositories. Last metadata expiration check: 2:16:32 ago on Mon 13 Jan 2025 07:12:38 PM CST. No match for argument: epel-release Error: Unable to find a match: epel-release 解决方法：\n启用EPEL存储库，需要安装yum-utils软件包，然后使用yum-config-manager命令启用EPEL存储库，执行以下命令：\n1 2 sudo yum install -y yum-utils device-mapper-persistent-data lvm2 sudo yum-config-manager --enable epel 然后再尝试安装epel-release软件包，执行以下命令\n1 2 3 4 sudo yum install epel-release # 注：如果该条命令依旧显示无法找到匹配的软件包，可以尝试使用以下命令（个人是使用这个命令执行成功的） # sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm 安装epel-release后，更新系统包缓存，执行以下命令\n1 2 3 sudo yum clean all sudo yum makecache sudo yum update 2、设置docker的yum源 执行以下命令，在yum中添加docker源\n1 sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 3、安装docker 在正式安装docker之前，如果当前主机中安装的有旧版docker或者不是docker-ce的版本，先进行卸载，执行命令\n1 2 3 4 5 6 7 8 sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine 开始安装docker-ce、docker-ce-cli、containerd.io，执行以下命令\n1 sudo yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 然后等待完成安装即可\n4、docker配置文件 使用vi/vim编辑vim /etc/systemd/system/docker.service文件，将以下内容写入该文件中\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 [Unit] Description=Docker Application Container Engine Documentation=https://docs.docker.com BindsTo=containerd.service After=network-online.target firewalld.service containerd.service Wants=network-online.target Requires=docker.socket [Service] Type=notify # the default is not to use systemd for cgroups because the delegate issues still # exists and systemd currently does not support the cgroup feature set required # for containers run by docker ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock ExecReload=/bin/kill -s HUP $MAINPID TimeoutSec=0 RestartSec=2 Restart=always # Note that StartLimit* options were moved from \u0026#34;Service\u0026#34; to \u0026#34;Unit\u0026#34; in systemd 229. # Both the old, and new location are accepted by systemd 229 and up, so using the old location # to make them work for either version of systemd. StartLimitBurst=3 # Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230. # Both the old, and new name are accepted by systemd 230 and up, so using the old name to make # this option work for either version of systemd. StartLimitInterval=60s # Having non-zero Limit*s causes performance problems due to accounting overhead # in the kernel. We recommend using cgroups to do container-local accounting. LimitNOFILE=infinity LimitNPROC=infinity LimitCORE=infinity # Comment TasksMax if your systemd version does not support it. # Only systemd 226 and above support this option. TasksMax=infinity # set delegate yes so that systemd does not reset the cgroups of docker containers Delegate=yes # kill only the docker process, not all processes in the cgroup KillMode=process [Install] WantedBy=multi-user.target 使用vi/vim编辑vim /etc/systemd/system/docker.socket文件，将以下内容写入该文件中\n1 2 3 4 5 6 7 8 9 10 11 12 [Unit] Description=Docker Socket for the API PartOf=docker.service [Socket] ListenStream=/run/docker.sock SocketMode=0660 SocketUser=root SocketGroup=root [Install] WantedBy=sockets.target 5、配置docker的daemon.json 首先登陆阿里云账号，阿里云地址：https://cn.aliyun.com/，找到并点击控制台，然后搜索：容器镜像服务。点击进入\n然后编辑文件vim /etc/docker/daemon.json，将以下内容写入你的daemon.json文件中\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \u0026#34;dns\u0026#34;: [\u0026#34;8.8.8.8\u0026#34;, \u0026#34;8.8.4.4\u0026#34;], \u0026#34;registry-mirrors\u0026#34;: [ \u0026#34;https://你的阿里云镜像加速地址\u0026#34;, // 注：该行自行添加你自己阿里云的镜像加速地址 \u0026#34;https://registry.docker-cn.com\u0026#34;, \u0026#34;http://hub-mirror.c.163.com\u0026#34;, \u0026#34;https://docker.mirrors.ustc.edu.cn\u0026#34;, \u0026#34;https://omh8vcpy.mirror.aliyuncs.com\u0026#34;, \u0026#34;https://docker.m.daocloud.io/\u0026#34;, \u0026#34;https://huecker.io/\u0026#34;, \u0026#34;https://dockerhub.timeweb.cloud\u0026#34;, \u0026#34;https://noohub.ru/\u0026#34;, \u0026#34;https://dockerproxy.com\u0026#34;, \u0026#34;https://docker.mirrors.ustc.edu.cn\u0026#34;, \u0026#34;https://docker.nju.edu.cn\u0026#34;, \u0026#34;https://xx4bwyg2.mirror.aliyuncs.com\u0026#34;, \u0026#34;http://f1361db2.m.daocloud.io\u0026#34;, \u0026#34;https://registry.docker-cn.com\u0026#34;, \u0026#34;http://hub-mirror.c.163.com\u0026#34;, \u0026#34;https://docker.mirrors.ustc.edu.cn\u0026#34; ] } 然后重新加载守护进程，执行命令sudo systemctl daemon-reload\n6、启动docker 启动docker\n1 sudo systemctl start docker 至此docker安装完毕，并且启动成功\n7、docker其他相关命令 重启docker服务\n1 sudo systemctl restart docker 拉取docker镜像，既然是软件，那么怎么能少的了我们的HelloWorld呢，此处就以拉取hello-world镜像为例，执行命令docker pull 你要拉取的镜像名及版本包，注：若没有版本号，那么拉取的就是最新的（latest）版本\n1 docker pulll hello-world 查看docker已拉取下来的镜像有哪些\n1 docker images ","date":"2025-01-13T21:30:00+08:00","image":"https://dxjxpr.github.io/p/%E7%BA%A2%E5%B8%BDrhel9%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85docker%E5%8F%8A%E9%85%8D%E7%BD%AE/docker_hu12762860715648496714.png","permalink":"https://dxjxpr.github.io/p/%E7%BA%A2%E5%B8%BDrhel9%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85docker%E5%8F%8A%E9%85%8D%E7%BD%AE/","title":"红帽RHEL9环境安装docker及配置"},{"content":"环境说明 操作系统：CentOS Linux release 7.9.2009 (Core) 本次安装MySQL版本：8.0.26 连接工具：xshell、xftp（或者其他连接/上传工具） 从腾讯云买的服务器，按量计费，临时用下，经济实惠（如果哪天有空写写服务器购买吧） 开始 1、查看centos7中是否有MariaDB，MariaDB与MySQL关系请自行查阅\nrpm -qa | grep mariadb\n2、如果有MariaDB，需要将 步骤1 中查询到的mairadb全部卸载，否则MySQL安装会出现问题\nrpm -e \u0026ndash;nodeps 软件名\n3、查看本机是否已经安装过MySQL\nrpm -qa | grep -i mysql\n4、如果安装过MySQL，请确定是否有数据需要备份（如果有需要备份的数据请自行查阅相关操作进行备份，否则数据丢失概不负责）\n如果没有安装过MySQL，请跳转步骤6\n5、卸载MySQL\n将步骤3中查询到的mysql安装包全部卸载 rpm -e \u0026ndash;nodeps 软件名\n查找mysql文件，并将其删除 find / -name mysql whereis mysql\n将find命令和whereis命令查询到的mysql文件全部删除\nrm -rf 查询到的mysql路径\n删除mysql配置文件\nrm /etc/my.cnf\n确认是否全部删除mysql rpm -qa | grep -i mysql\n6、MySQL官网下载适用于centos7的mysql安装包 查询服务器是x86_64架构还是arm架构\nuname -m 或者是 arch # 我的服务器是x86_64的\n这里可以下载直接通过浏览器下载下来，然后通过ftp上传到所要安装的服务器中 或者是复制这个tar包的链接，然后通过wget命令下载，操作如下 wget 文件的网络地址\n比如我这里下载的地址是\nwget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.26-1.el7.x86_64.rpm-bundle.tar\n无论是通过xftp工具还是wget命令，将MySQL的tar包传到centos的某个目录下（比如home目录下），这里演示的是上传到root用户的home目录下 7、解压tar包 在解压之前，建议先创建一个空的目录，因为这个tar包解压后多个rpm包会直接放到当前目录。因为我的tar包是在root用户的home目录下，所以直接在这个目录下创建了一个mysql的目录。这个目录无所谓！\nmkdir mysql 解压该tar包\ntar -xvf mysql的tar包全名 -C 解压到指定目录 # 说明：-C参数，后面跟的是目录，意思是将压缩包解压缩后存放到指定的目录下。\n# 这里就指定到刚才创建的mysql目录下\n8、开始安装MySQL\nrpm安装命令 rpm -ivh xxx.rpm\n# 这里选择的是全部安装 # 安装顺序如下，否则会出现依赖问题 mysql-community-common-8.0.26-1.el7.x86_64.rpm mysql-community-client-plugins-8.0.26-1.el7.x86_64.rpm mysql-community-embedded-compat-8.0.26-1.el7.x86_64.rpm mysql-community-libs-8.0.26-1.el7.x86_64.rpm mysql-community-libs-compat-8.0.26-1.el7.x86_64.rpm mysql-community-devel-8.0.26-1.el7.x86_64.rpm mysql-community-client-8.0.26-1.el7.x86_64.rpm mysql-community-server-8.0.26-1.el7.x86_64.rpm mysql-community-test-8.0.26-1.el7.x86_64.rpm\n以上安装rpm时可能会出现centos的动态库缺失等情况，这里记录下几种错误情况 情况1： [root@VM-0-14-centos mysql]# rpm -ivh mysql-community-embedded-compat-8.0.26-1.el7.x86_64.rpm warning: mysql-community-embedded-compat-8.0.26-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY error: Failed dependencies: libnuma.so.1()(64bit) is needed by mysql-community-embedded-compat-8.0.26-1.el7.x86_64 libnuma.so.1(libnuma_1.1)(64bit) is needed by mysql-community-embedded-compat-8.0.26-1.el7.x86_64 libnuma.so.1(libnuma_1.2)(64bit) is needed by mysql-community-embedded-compat-8.0.26-1.el7.x86_64\n解决方式：\nyum -y install numactl 情况2 [root@VM-0-14-centos mysql]# rpm -ivh mysql-community-devel-8.0.26-1.el7.x86_64.rpm warning: mysql-community-devel-8.0.26-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY error: Failed dependencies: pkgconfig(openssl) is needed by mysql-community-devel-8.0.26-1.el7.x86_64\n解决方式\nyum install openssl-devel 情况3 [root@VM-0-14-centos mysql]# rpm -ivh mysql-community-test-8.0.26-1.el7.x86_64.rpm warning: mysql-community-test-8.0.26-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY error: Failed dependencies: perl(Data::Dumper) is needed by mysql-community-test-8.0.26-1.el7.x86_64\n解决方式\nyum -y install autoconf 情况4 [root@VM-0-14-centos mysql]# rpm -ivh mysql-community-test-8.0.26-1.el7.x86_64.rpm warning: mysql-community-test-8.0.26-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY error: Failed dependencies: perl(JSON) is needed by mysql-community-test-8.0.26-1.el7.x86_64\n解决方式\nyum install perl-JSON.noarch -y yum install perl.x86_64 perl-devel.x86_64 -y 情况5 [root@VM-0-14-centos mysql]# rpm -ivh mysql-community-test-8.0.26-1.el7.x86_64.rpm warning: mysql-community-test-8.0.26-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY error: Failed dependencies: perl(Test::More) is needed by mysql-community-test-8.0.26-1.el7.x86_64\n解决方式：\n到 https://pkgs.org/download/perl(Test::More)，打开centos7的下拉框，找到CentOS x86_64下对应的rpm，然后打开这个rpm连接，在Download对应的部分找Binary Package，后面有对应的rpm下载连接，下载下来进行安装即可 9、初始化数据库\nmysqld \u0026ndash;initialize \u0026ndash;console\n10、目录授权，否则可能会启动失败\nchown -R mysql:mysql /var/lib/mysql/\n11、启动mysql\nsystemctl start mysqld\n对应的重启、关闭mysql命令如下 systemctl stop mysqld systemctl restart mysqld\n12、查询mysql状态\nsystemctl status mysqld\n13、查询mysql的临时密码\ncat /var/log/mysqld.log | grep password\n14、使用临时密码登录mysql\nmysql -u root -p\n注意：linux下输入密码是不会回显（不是电脑坏了！），输入完毕后直接回车即可 密码输入正确，回车后看到如下信息，则代表成功进入mysql 15、修改mysql的登录密码\nalter user \u0026lsquo;root\u0026rsquo;@\u0026rsquo;localhost\u0026rsquo; identified with mysql_native_password by \u0026lsquo;你的密码\u0026rsquo; ;\n注：mysql8对密码的强度有很高的要求，具体密码要求可使用以下命令查询 SHOW VARIABLES LIKE \u0026lsquo;validate_password%\u0026rsquo;;\n最后重启下mysql即可\n16、mysql设置远程连接 注：这个步骤根据实际需求而设定\nshow databases ; use mysql ;\n查看可登录mysql的host\nselect host, user from user;\nhost部分全部都是localhost，说明用户只能本地连接msyql服务 修改root用户的host值，并刷新mysql数据库 update user set user.host=\u0026rsquo;%\u0026rsquo; where user.user=\u0026lsquo;root\u0026rsquo;; flush privileges;\n在我的windows电脑上使用Navicat测试连接服务器上的mysql，看看是否能够远程连接 17、其他情况说明\n连接失败的情况\ncentos7的防火墙是否开启了3306的端口 云服务器的出入站规则配置情况 篇幅太长这里不再一一说明情况，如果遇到失败情况请自行查询\n","date":"2021-07-27T21:06:14+08:00","image":"https://dxjxpr.github.io/p/centos7%E5%AE%89%E8%A3%85mysql8%E6%95%99%E7%A8%8B/mysql_hu3008918706900351554.jpg","permalink":"https://dxjxpr.github.io/p/centos7%E5%AE%89%E8%A3%85mysql8%E6%95%99%E7%A8%8B/","title":"CentOS7安装mysql8教程"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://dxjxpr.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://dxjxpr.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"下载并安装Navicat15 1、到Navicat官网下载Navicat Premium 15版本 然后一直下一步 点击安装 激活Navicat15 1、使用navicat15激活工具（激活工具链接见文章末尾） 双击Navicat Keygen Patch v5.6.0 DFoX.exe，出现如下弹框 2、点击Patch按钮 3、出现如下提示窗口，则证明该步骤ok。如果点击Patch按钮后，弹出了资源管理器，在弹出的资源管理器中找到navicat的安装目录，并双击navicat.exe，然后即可看到如下的提示信息 4、按照如图所示，点击Generate按钮，然后会生成一个密钥，复制这个密钥 5、打开Navicat软件 6、将刚才复制的密钥直接粘贴到这里 7、点击手动激活 8、复制请求码 9、按照如下图所示，进行粘贴激活 ","date":"2018-10-09T15:44:34+08:00","image":"https://dxjxpr.github.io/p/navicat15%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/navicat_hu4501121661279797462.png","permalink":"https://dxjxpr.github.io/p/navicat15%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/","title":"Navicat15激活教程"},{"content":"友情提示：数据无价，谨慎操作（会出事的） 看完再进行操作，如果是新手最好有人在旁边指导！！！ 看完再进行操作，如果是新手最好有人在旁边指导！！！ 看完再进行操作，如果是新手最好有人在旁边指导！！！ 重要的事情说三遍\t！！！ 重装系统 如果你还需要的话，请先将系统所要安装到的分区数据备份出来，后面会格式化该分区（删除）\n系统盘刻录好之后，就要进入电脑的BIOS界面了，U盘插上之后，就不要去动了，直到系统装好之后再拔掉，如何进入BIOS？在你电脑开机（重启/开机），出现电脑图标的时候，按下BIOS快捷键，常见BIOS的快捷键有DEL、ESC、F2、F10、F11、F12，可根据自己的电脑品牌在网上搜下 比如联想的，等出现下面的图标后按下联想的BIOS快捷键，其他牌子的电脑类比下 然后进入到下面的蓝色页面，这是我电脑的BIOS，每个电脑的BIOS界面可能不太一样，比如Dell新版BIOS是白色的文字页面，了解下就行（问题不大，找到系统启动顺序就行，BIOS里面会有说明信息），我这里是通过上下左右按键来移动，使用enter还确认，使用esc来退出，在boot菜单下，选择系统启动方式，还记得上面说的mbr+legacy模式（旧）和gpt+uefi模式（新）吗？看到下面的U盘选项前面有个UEFI了吗，因为我电脑磁盘分区表格式是gpt格式的，所以就选择uefi启动，如果是mbr的话，找到前面不带uefi的U盘选项（注：我这里没有那个选项）；有的电脑主板是会有单独的启动方式选项，然后根据磁盘分区表来选择legacy还是uefi方式即可，具体情况需要看你电脑的主板了。\n然后将U盘调整到第一个选项，有的是使用+/-，有的是使用F5/F6来调整，具体需要看你的BIOS怎么调整，一般来说右边会有英文说明，我这里是使用回车来调整，最后按下F10保存BIOS设置（注一般是F10，有的电脑不是） F10保存并退出BIOS 第二种进入U盘的方式是先进入到BIOS的菜单选项，再找到U盘启动项，直接回车就行了，然后就是等着重启了，看到没有？我这里有两个U盘选项，一个不带UEFI的（搭配mbr分区表格式），一个带（搭配gpt分区表格式），我这里肯定是选择带UEFI的选项了（因为我电脑磁盘的分区表格式是gpt呀！），你需要根据你电脑磁盘分区表格式来选择了，哈？不知道自己电脑分区表格式？请看这里 然后读取U盘信息，进入系统盘 很好，已经进来了，下面的界面选择默认，直接点击下一步即可 点击现在安装 安装程序正在启动，等待几秒就好了 这里要输入密钥，选择下方的选项：我没有密钥，先跳过这一步，装好系统后再来激活 win10的系统镜像一般包含好几种系统版本来供选择，看自己选择，我这里选择专业版 签订协议，点击下一步继续 注意：这里涉及到磁盘了！！！谨慎操作！！！不小心的话会把磁盘里的文件删了，搞明白了再进行操作\n因为我们要重装系统，所以选择第二个自定义选项，自己来设置系统磁盘的大小 点击自定义后会出现你现在电脑上所有的分区（下图)\n这里很重要！！！很重要！！！很重要！！！看清楚再点击！！！ 先说下系统磁盘的大小划分，一般来说系统会占用掉30G左右的磁盘空间，然后肯定不能只分30G，因为系统需要安装各种软件，而有的软件是只能安装到C盘的（系统盘），比如说谷歌浏览器什么的，所以一般就给系统分60G往上，当然你磁盘空间大的话，可以多划分，这个具体如何划分需要根据磁盘大小和你电脑用途来选择\n因为我这里有两块磁盘，所以上面会显示两个驱动器号（0和1），同一个驱动号可能有多个分区，就是你windows上显示的C、D、E\u0026hellip;.盘，在我电脑里驱动器0代表的是机械硬盘，驱动器1代表的是固态硬盘，注意如果你也有多块硬盘的话，驱动器0不一定代表的是机械硬盘，具体代表的是什么硬盘是和你电脑硬盘的安装顺序有关系，这里要看清楚再选择！！！别搞错了！！！\n在这里 我想将系统装在固态硬盘当中，那么我就去对带驱动器1的分区进行操作，选择好你要安装的地方，然后将这块分区删除，如果电脑里面没有其他系统的话，或者没有必要的话，将该窗口上显示的msr分区、esp分区、恢复分区都给删除了，删除后，该窗口上会出现一个名为： “未分区的空间 ” 的分区，如果你电脑本身就有未分区的空间，那么在你进行删除之后，可能会和你电脑本来就有的 未分区空间 合并到一起（ 至于是否合并与物理磁盘顺序有关），这个注意下，然后点击该未分区的空间，显示成高亮之后，点击下一步，然后就是开始安装系统了\n注：如果该步骤在点击下一步的时候提示安装不了系统，可能是系统的原因，也有可能是磁盘的原因，或者是系统启动方式错误等其他错误原因，如果遇到问题请自行百度，这里只讲日常（正常）操作！！！ 下面这个步骤就需要等待了，时间长短不一，一般几分钟就好了，这个时候就不用管了，等着它安装好就行了 注：此时不要强制关机 安装好之后就会有下面的界面，你可以选择等10秒钟自动重启，或者是点击立即重启，等电脑黑屏之后，将U盘拔掉，不要拔早了，可能会造成系统损坏（会安装失败的）；也不要迟拔，因为迟拔的话，可能还会进入到安装界面，因为U盘设置的是第一启动项！！！如果是迟拔的话，将那个安装页面关了，把U盘拔掉就行 U盘拔掉之后，就等着它重启，注：这个过程，电脑可能会启动多次，正常操作，不用担心，下面就是根据系统提示信息来进行操作了 下面的密钥依旧选择跳过，选择以后再说，如果提示联网的话，不要联网！不要联网！不要联网！网线拔了，也不要去连接WiFi，把网断掉 这个可以选择自定义，或者是默认的设置，看个人喜好，这里选择的是默认设置 下面就是创建账户了，如果不想创建账户，直接点击下一步，系统默认的账户是Administrator（管理员），或者是你只想创建一个账户而不设置密码的话，就输入一个账户名字就行了，然后点击下一步，这样就没有密码了 下面就是系统自己的事情了，会进行一系列的配置 等待后的结果就是下面这个样子。是不是感觉很纯净？这样系统就算是装好了，接着就需要自己进行系统的配置了，比如屏幕分辨率、个性化、磁盘划分、安装各种软件等等，所以装系统并不费时间，费时间的是装好后的操作 ","date":"2018-10-08T19:57:34+08:00","image":"https://dxjxpr.github.io/p/u%E7%9B%98%E9%87%8D%E8%A3%85win10%E4%B8%89%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F/windows10_03_hu2395467222144317039.jpg","permalink":"https://dxjxpr.github.io/p/u%E7%9B%98%E9%87%8D%E8%A3%85win10%E4%B8%89%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F/","title":"U盘重装win10(三)重装系统"},{"content":"刻录系统 使用刻录工具，这里用的是UltraISO（软碟通）官网下载，或者使用其他刻录软件\n注：这个软件下载好之后，可以不用激活，直接点右下角的继续试用就行，如果想激活的话，附激活账号： 用户名：王涛 注册码：7C81-1689-4046-626F\n先将U盘中的数据备份出来，后面要格式化U盘 启动ultraISO 选择系统镜像 这样系统就加载到ultraISO里了 然后选择刻录（写入硬盘映像） 这里选择你所要刻录的U盘（会显示你U盘的名字，我U盘是金士顿，所以上面的名字是Kingston），刻录校验可选可不选 然后把根据图片提示步骤，先将U盘格式化，再选择写入，如果是3.0的U盘的话，一般小于10分钟，如果是2.0的话，可能会稍微久一点，这个对装系统没什么影响 然后就是开始刻录，刻录过程不要动U盘，否则可能会造成系统的刻录失败（ultraISO可能会提醒可能不会） 刻录好的U盘内容，看到U盘的名字变成了CCCOMA_X64F了没？刻录系统会改变U盘的名字，所以上面在格式化U盘的时候，U盘的名字不用换，但需要一个名字 下面就是开始装系统了\n","date":"2018-10-07T21:47:48+08:00","image":"https://dxjxpr.github.io/p/u%E7%9B%98%E9%87%8D%E8%A3%85win10%E4%BA%8C%E5%88%BB%E5%BD%95%E7%B3%BB%E7%BB%9F%E7%9B%98/windows10_02_hu1696567282126836268.jpg","permalink":"https://dxjxpr.github.io/p/u%E7%9B%98%E9%87%8D%E8%A3%85win10%E4%BA%8C%E5%88%BB%E5%BD%95%E7%B3%BB%E7%BB%9F%E7%9B%98/","title":"U盘重装win10(二)刻录系统盘"},{"content":"装系统准备： 一个不小于8G的U盘 一个下载好的win10系统镜像（后缀式为.iso） 下载工具：迅雷或者百度云盘 刻录工具：UltraISO（软碟通，最好是从官网下载），或者其他刻录软件 磁盘工具：diskgenius，或其他磁盘工具都可以\n检查电脑参数 首先需要去知道自己电脑里面的一些参数，这里用DiskGenius软件来检测，需要可到官网下载 以我电脑为例，我电脑是64位的，所以这里下载的是64位，根据自己电脑来选择 上面的分区表类型很重要！后面装的时候用的到\n如果你所要装系统磁盘的分区表格式是mbr，那么在重装系统的时候方式就要选择legacy 如果是上面的gpt格式，那么启动方式就选择uefi 不要搞错了，如果不匹配的话，可能装不上系统，或者装上了以后在更新系统的时候，系统是更新不了的，这里先这么选，不懂也没事，不要搞错就行了 下面看看就行，如果会的话，可以绕过，关乎数据安全！（数据无价，谨慎操作！！！） 附加：mbr+legacy模式（旧）是传统启动方式，相对于gpt+uefi模式（新），系统启动时间可能相对慢点，还有磁盘的主分区数量 等其他的区别。 如果想转换的话，可以在重装系统选择磁盘界面可以转换（具体操作请百度），警告：要转换的磁盘会被格式化，这里的格式化是整个磁盘，不是某个分区！！！数据会全部丢失！！！\n下载系统镜像 百度msdn，从这个网站下载镜像系统 注：这个网站不仅有各种系统镜像，还有其他微软的软件，比如vb、vs、office等等，有需要可以从这里下载，下载方式和下载系统镜像一样一样的 这里的操作系统有win7、win8、win8.1、win10等等 可以使用迅雷来下载系统镜像，只需要复制下载链接后打开迅雷，就会自动弹出下载页面了，选择你要存放的位置 如果不想用迅雷的话，也可以用百度云盘（这个我想都应该有的吧？） 复制下载链接后，选择离线下载，保存到百度网盘上，然后再下载下来 系统镜像已经有了，那么下面就是把U盘插电脑上，开始刻系统盘了\n","date":"2018-10-06T19:57:34+08:00","image":"https://dxjxpr.github.io/p/u%E7%9B%98%E9%87%8D%E8%A3%85win10%E4%B8%80%E4%B8%8B%E8%BD%BD%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/windows10_01_hu5018570729551207462.jpeg","permalink":"https://dxjxpr.github.io/p/u%E7%9B%98%E9%87%8D%E8%A3%85win10%E4%B8%80%E4%B8%8B%E8%BD%BD%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/","title":"U盘重装win10(一)下载系统镜像"}]