<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Git on I&#39;m Mr.Liu</title>
        <link>https://dxjxpr.github.io/tags/git/</link>
        <description>Recent content in Git on I&#39;m Mr.Liu</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>dxjxpr All Rights Reserved</copyright>
        <lastBuildDate>Fri, 09 May 2025 12:00:00 +0800</lastBuildDate><atom:link href="https://dxjxpr.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Git初始化相关配置</title>
        <link>https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Fri, 09 May 2025 12:00:00 +0800</pubDate>
        
        <guid>https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;img src="https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/cover.jpg" alt="Featured image of post Git初始化相关配置" /&gt;&lt;h2 id=&#34;git配置&#34;&gt;Git配置
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在Git安装完成后，windows操作系统上会多出一个&lt;code&gt;Git Bash&lt;/code&gt;的软件，如果是linux或者是macOS，那么直接打开终端，在终端中敲击命令即可&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查git版本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 或&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在使用git时，需要配置一下用户名和邮箱&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 用户名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.name &lt;span class=&#34;s2&#34;&gt;&amp;#34;your name&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 邮箱&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.email &lt;span class=&#34;s2&#34;&gt;&amp;#34;your email&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 省略(Local)：本地配置，只对本地仓库有效&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# --global：全局配置，所有仓库生效，最多使用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# --system：系统配置，对所有用户生效，一般不使用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;以上命令只需要执行一次即可，执行以下命令可以用于保存用户名和密码，执行该命令的主要目的是由于使用http时，会出现一个弹窗要求输入用户名和密码，只需要在第一次clone输入用户名和密码，这些信息就被存储起来，以后就可以自动读取，不需要你在手动输入了。&lt;/li&gt;
&lt;li&gt;如果是配置了ssh密钥，那么就可以不用执行这个命令&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global credential.helper store
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看git的配置信息&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;git初始化&#34;&gt;Git初始化
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建仓库两种方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在文件夹下执行&lt;code&gt;git init&lt;/code&gt;命令&lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;git clone&lt;/code&gt;命令从远程服务器上clone一个已经存在的仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果使用&lt;code&gt;git init&lt;/code&gt;命令初始化一个仓库，是初始化当前所在目录，如果是执行了&lt;code&gt;git init xxx&lt;/code&gt;这样的话，是会在当前目录下创建一个xxx目录，并且初始化为一个git仓库&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看到在执行完成git init后，该目录后面多了一个&lt;code&gt;master&lt;/code&gt;标识&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511160435477.png&#34;
	width=&#34;2244&#34;
	height=&#34;942&#34;
	srcset=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511160435477_hu_6d3f0334c8af9802.png 480w, https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511160435477_hu_c2dfce29c95b9a16.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250511160435477&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;571px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;出现上面黄色字体的部份，是因为这是Git 2.28 版本之后的新特性。这个提示是在你第一次使用 Git 初始化一个仓库时出现的，它告诉你默认的主分支名称从 &lt;code&gt;master&lt;/code&gt; 可能会更改为其他名称（例如 &lt;code&gt;main&lt;/code&gt;、&lt;code&gt;trunk&lt;/code&gt; 或 &lt;code&gt;development&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了防止出现这个警告，你可以通过在命令行中输入以下命令来配置 Git 初始化默认分支名称，个人一般习惯使用&lt;code&gt;master&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global init.defaultBranch &amp;lt;name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行命令后再次执行&lt;code&gt;git init&lt;/code&gt;命令就不会再出现上方黄色字体部份了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161124659.png&#34;
	width=&#34;2270&#34;
	height=&#34;310&#34;
	srcset=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161124659_hu_e359d31bc72eb2ca.png 480w, https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161124659_hu_51ad5e6d13b9f840.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250511161124659&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;732&#34;
		data-flex-basis=&#34;1757px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果已经创建一个仓库，但是想要更改主分支名称，则可以使用以下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# &amp;lt;name&amp;gt;是你想要更改后的主分支名称&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -m &amp;lt;name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161324020.png&#34;
	width=&#34;1996&#34;
	height=&#34;242&#34;
	srcset=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161324020_hu_c38c4d560d9ebc94.png 480w, https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161324020_hu_a0fc4bb0ee61c688.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250511161324020&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;824&#34;
		data-flex-basis=&#34;1979px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;如何才能确定当前文件夹是一个git仓库&#34;&gt;如何才能确定当前文件夹是一个git仓库
&lt;/h3&gt;&lt;p&gt;除了会在终端命令行后面显示一个master标识外，最重要的就是当前仓库下有一个&lt;code&gt;.git&lt;/code&gt;的目录，这个目录一定不能删除，因为一旦删除后，这个目录就不再是一个仓库，也无法查看历史文件了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161550969.png&#34;
	width=&#34;1544&#34;
	height=&#34;320&#34;
	srcset=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161550969_hu_8ff42606ba7cf614.png 480w, https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/image-20250511161550969_hu_2f59c97fa8b00e83.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250511161550969&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;482&#34;
		data-flex-basis=&#34;1158px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;工作区暂存区本地仓库&#34;&gt;工作区、暂存区、本地仓库
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;工作区（Working Directory）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地计算机上的项目目录，在这个目录下创建、修改和删除操作。工作区包含了当前项目的所有文件和子目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂存区（Staging Area/Index）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;暂存区是一个临时存储的区域，它包含了即将被提交到版本库中的文件快照，在提交之前，可以选择性的将工作区中的修改添加到暂存区中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地仓库（Local Repository）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地仓库包含了所有的版本历史记录，每一次提交都会在版本库中创建一个新的快照，这些快照是不可更改，具有唯一ID，确保了项目的完整历史记录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/1352126739_7909.jpg&#34;
	width=&#34;683&#34;
	height=&#34;357&#34;
	srcset=&#34;https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/1352126739_7909_hu_90de73d14afb1b59.jpg 480w, https://dxjxpr.github.io/p/git%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/1352126739_7909_hu_e2963b9aa395d745.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;459px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;三者之间的关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工作区&amp;ndash;&amp;gt;暂存区
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;git add&lt;/code&gt;命令将工作区中的修改添加到暂存区中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add filename
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 如果将filename替换成 . 表示将当前目录下的所有变更的文件全部提交到暂存区中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;暂存区&amp;ndash;&amp;gt;本地仓库
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;git commit&lt;/code&gt;命令将暂存区中的修改提交到版本库&lt;/li&gt;
&lt;li&gt;注：该操作不会提交工作区中的文件，只会提交暂存区中的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;current commit message&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;本地仓库&amp;ndash;&amp;gt;远程仓库
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;git push&lt;/code&gt;命令将本地仓库的提交推送到远程仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin branch-name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;远程仓库&amp;ndash;&amp;gt;本地仓库
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;git pull&lt;/code&gt;或&lt;code&gt;git fetch&lt;/code&gt;命令从远程仓库获取更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git pull origin branch-name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 或&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git fetch origin branch-name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git merge origin/branch-name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文件状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;未跟踪（Untarck）：新创建的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;未修改（Unmodified）：已经被git管理的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;已修改（Modified）：已经被修改，但是还没有被添加到暂存区的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;已暂存（Staged）：已经修改，并且已经添加到暂存区的文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Git简介-发展</title>
        <link>https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/</link>
        <pubDate>Wed, 07 May 2025 12:00:00 +0800</pubDate>
        
        <guid>https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/</guid>
        <description>&lt;img src="https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/cover.jpg" alt="Featured image of post Git简介-发展" /&gt;&lt;h1 id=&#34;git&#34;&gt;Git
&lt;/h1&gt;&lt;h2 id=&#34;简介&#34;&gt;简介
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Git是一个开源的分布式版本控制系统，跨平台，支持Windows、Linux、MacOS。主要是用于项目的版本管理，是由林纳斯·托瓦兹(Linux Torvalds)在2005年为Linux内核开发而创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;起因&#34;&gt;起因
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在2002年至2005年间，Linux内核开发团队使用BitKeeper（一个专有的版本控制系统）来管理代码，Linux团队汇集了全球顶尖人才，免不了有人想破解BitKeeper的软件，BitKeeper的开发公司BitMover在2005年停止了向Linux团队的免费版本支持。&lt;/li&gt;
&lt;li&gt;于是成功惹怒了Linus这位大佬，迫使Linus寻找一个高效、分布式的版本控制工具。由于对当时其他工具（如SVN、CVS）的性能和功能不满，Linus决定开发一个自己的版本控制系统，然后一周后，Git这个延续至今的闪耀新星诞生。只能说大佬就是大佬。&lt;/li&gt;
&lt;li&gt;站在历史的角度来说，BitKeeper公司也是错过了一次流芳百世的机会/商机，如果BitKeeper公司继续提供使用，可能也不会有Git的问世。历史的滚滚车轮总是这么奇妙，悄无声息，又很神秘，好像一切都是安排好的一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设计目标&#34;&gt;设计目标
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;高效性：能够快速处理大型项目（如Linux内核）的版本控制&lt;/li&gt;
&lt;li&gt;分布式：允许开发者在本地操作完整的历史记录，无需依赖中央服务器&lt;/li&gt;
&lt;li&gt;数据完整性：通过SHA-1哈希确保版本历史的可靠性&lt;/li&gt;
&lt;li&gt;简单易用：提供直观的命令和灵活的工作流程&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;发展历史&#34;&gt;发展历史
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;几个关键阶段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2005年4月7日正式上线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2005-2008年：社区接管与功能完善&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2008-2012年：普及与生态系统繁荣&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2012-2020年：性能优化与新功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年至今：现代化与企业级应用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;当今地位&#34;&gt;当今地位
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;普及度：Git是全球最流行的版本控制系统，几乎所有主流代码托管平台（Github、GitLab、Bitbucket）都是以Git为核心&lt;/li&gt;
&lt;li&gt;影响力：Git不仅用于软件开发，还被应用于书籍写作、法律文档管理、数据科学等领域&lt;/li&gt;
&lt;li&gt;维护：Git由开源社区进行维护，拥有全球顶尖的开发者贡献者，代码托管在GitHub上&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git下载与安装&#34;&gt;Git下载与安装
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;官网地址：https://git-scm.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/image-20250510174600272.png&#34;
	width=&#34;3360&#34;
	height=&#34;1806&#34;
	srcset=&#34;https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/image-20250510174600272_hu_a59a9d4d6c96322b.png 480w, https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/image-20250510174600272_hu_72daac05aa354d94.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250510174600272&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;446px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub地址：https://github.com/git/git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/image-20250510174653485.png&#34;
	width=&#34;3360&#34;
	height=&#34;1806&#34;
	srcset=&#34;https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/image-20250510174653485_hu_792028f9730d563a.png 480w, https://dxjxpr.github.io/p/git%E7%AE%80%E4%BB%8B-%E5%8F%91%E5%B1%95/image-20250510174653485_hu_1580e4db68fb7d9d.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250510174653485&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;446px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;基本概念
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;仓库（Repository）：存储代码和版本历史的地方，分为本地仓库和远程仓库。&lt;/li&gt;
&lt;li&gt;提交（Commit）：代码变更的快照，记录修改内容和元数据（如作者、时间）。&lt;/li&gt;
&lt;li&gt;分支（Branch）：代码的独立开发线，默认分支通常为main。&lt;/li&gt;
&lt;li&gt;合并（Merge）：将不同分支的更改整合到一起。&lt;/li&gt;
&lt;li&gt;远程仓库（Remote）：托管在服务器上的仓库，如GitHub、GitLab。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;常用命令
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;初始化：git init（创建新仓库）&lt;/li&gt;
&lt;li&gt;克隆：git clone &lt;url&gt;（复制远程仓库）&lt;/li&gt;
&lt;li&gt;添加：git add &lt;file&gt;（将更改加入暂存区）&lt;/li&gt;
&lt;li&gt;提交：git commit -m &amp;ldquo;message&amp;rdquo;（保存更改到本地仓库）&lt;/li&gt;
&lt;li&gt;推送：git push origin &lt;branch&gt;（上传本地更改到远程仓库）&lt;/li&gt;
&lt;li&gt;拉取：git pull（从远程仓库获取更新）&lt;/li&gt;
&lt;li&gt;分支：git branch（查看分支）、git checkout -b &lt;branch&gt;（创建并切换分支）&lt;/li&gt;
&lt;li&gt;合并：git merge &lt;branch&gt;（合并分支）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应用场景&#34;&gt;应用场景
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;软件开发：管理代码版本，支持团队协作。&lt;/li&gt;
&lt;li&gt;开源项目：通过GitHub等平台实现全球开发者贡献。&lt;/li&gt;
&lt;li&gt;非代码场景：管理文档、配置文件、数据科学项目等。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
